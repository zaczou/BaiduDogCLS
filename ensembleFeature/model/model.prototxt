name: "ensemble_feature_net"

#resnet50(299) Feature
layer{
	name: "resnet50"
	type: "Data"
	top: "resnet50"
 	include {
    		phase: TRAIN
  	}
	data_param{
		source: "/home/lab-xiong.jiangfeng/Projects/doge/dataset/train/feat/resnet50_train"
    		batch_size: 512
    		backend: LMDB
  	}
}
layer{
	name: "resnet50"
	type: "Data"
	top: "resnet50"
 	include {
    		phase: TEST
  	}
	data_param{
		source: "/home/lab-xiong.jiangfeng/Projects/doge/dataset/train/feat/resnet50_val"
    		batch_size: 512
    		backend: LMDB
  	}
}
#ResNext224
layer{
  name: "resnext224"
  type: "Data"
  top: "resnext224"
  include {
        phase: TRAIN
    }
  data_param{
    source: "/home/lab-xiong.jiangfeng/Projects/doge/dataset/train/feat/resnext224_train"
        batch_size: 512
        backend: LMDB
    }
}
layer{
  name: "resnext224"
  type: "Data"
  top: "resnext224"
  include {
        phase: TEST
    }
  data_param{
    source: "/home/lab-xiong.jiangfeng/Projects/doge/dataset/train/feat/resnext224_val"
        batch_size: 512
        backend: LMDB
    }
}

#Resnext299
layer{
	name: "resnext299"
	type: "Data"
	top: "resnext299"
 	include {
    		phase: TRAIN
  	}
	data_param{
		source: "/home/lab-xiong.jiangfeng/Projects/doge/dataset/train/feat/resnext299_train"
    		batch_size: 512
    		backend: LMDB
  	}
}
layer{
	name: "resnext299"
	type: "Data"
	top: "resnext299"
 	include {
    		phase: TEST
  	}
	data_param{
		source: "/home/lab-xiong.jiangfeng/Projects/doge/dataset/train/feat/resnext299_val"
    		batch_size: 512
    		backend: LMDB
  	}
}

# #Inception v4 
layer{
	name: "inception-v4"
	type: "Data"
	top: "inception-v4"
 	include {
    		phase: TRAIN
  	}
	data_param{
		source: "/home/lab-xiong.jiangfeng/Projects/doge/dataset/train/feat/inception-v4_train"
    		batch_size: 512
    		backend: LMDB
  	}
}
layer{
	name: "inception-v4"
	type: "Data"
	top: "inception-v4"
 	include {
    		phase: TEST
  	}
	data_param{
		source: "/home/lab-xiong.jiangfeng/Projects/doge/dataset/train/feat/inception-v4_val"
    		batch_size: 512
    		backend: LMDB
  	}
}

# #inception v4-crop
# layer{
# 	name: "inception-v4_crop"
# 	type: "Data"
# 	top: "inception-v4_crop"
#  	include {
#     		phase: TRAIN
#   	}
# 	data_param{
# 		source: "/home/lab-xiong.jiangfeng/Projects/doge/dataset/train/feat/inception-v4_crop_train"
#     		batch_size: 512
#     		backend: LMDB
#   	}
# }
# layer{
# 	name: "inception-v4_crop"
# 	type: "Data"
# 	top: "inception-v4_crop"
#  	include {
#     		phase: TEST
#   	}
# 	data_param{
# 		source: "/home/lab-xiong.jiangfeng/Projects/doge/dataset/train/feat/inception-v4_crop_val"
#     		batch_size: 512
#     		backend: LMDB
#   	}
# }


layer{
	name: "resnet50_label"
	type: "Data"
	top: "label"
 	include {
    		phase: TRAIN
  	}
	data_param{
		source: "/home/lab-xiong.jiangfeng/Projects/doge/dataset/train/feat/resnet50_label"
    		batch_size: 512
    		backend: LMDB
  	}
}
layer{
	name: "resnet50_label"
	type: "Data"
	top: "label"
 	include {
    		phase: TEST
  	}
	data_param{
		source: "/home/lab-xiong.jiangfeng/Projects/doge/dataset/train/feat/resnet50_label_val"
    		batch_size: 512
    		backend: LMDB
  	}
}

layer{ 
  name: "ensemble_feature"
  type: "Concat"
  bottom: "resnet50"
  bottom: "resnext224"
  bottom: "resnext299"
  bottom: "inception-v4"
  top: "ensemble_feature"
}

layer {
  name: "bn_fea"
  type: "BatchNorm"
  bottom: "ensemble_feature"
  top: "bn_fea"
}
layer {
  name: "scale_fea"
  type: "Scale"
  bottom: "bn_fea"
  top: "scale_fea"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "drop_fea"
  type: "Dropout"
  bottom: "scale_fea"
  top: "scale_fea"
  dropout_param {
    dropout_ratio: 0.9
  }
}
layer {
  bottom: "scale_fea"
  top: "fc1"
  name: "fc1"
  type: "InnerProduct"
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  name: "bn_fc1"
  type: "BatchNorm"
  bottom: "fc1"
  top: "fc1"
}
layer {
  name: "scale_fc1"
  type: "Scale"
  bottom: "fc1"
  top: "fc1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "fc1_relu"
  type: "ReLU"
  bottom: "fc1"
  top: "fc1"
}
layer {
  name: "drop_fc1"
  type: "Dropout"
  bottom: "fc1"
  top: "fc1"
  dropout_param {
    dropout_ratio: 0.8
  }
}
layer {
  bottom: "fc1"
  top: "fc2"
  name: "fc2"
  type: "InnerProduct"
  inner_product_param {
    num_output: 32
    weight_filler {
      type: "xavier"
    }
    bias_term: false
  }
}
layer {
  name: "bn_fc2"
  type: "BatchNorm"
  bottom: "fc2"
  top: "fc2"
}
layer {
  name: "scale_fc2"
  type: "Scale"
  bottom: "fc2"
  top: "fc2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "fc2_relu"
  type: "ReLU"
  bottom: "fc2"
  top: "fc2"
}
layer {
  name: "drop_fc2"
  type: "Dropout"
  bottom: "fc2"
  top: "fc2"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer {
  bottom: "fc2"
  top: "fc100"
  name: "fc100"
  type: "InnerProduct"
  inner_product_param {
   num_output: 100
     weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc100"
  bottom: "label"
  top: "loss"
}
layer {
  name: "accuracy_top1"
  type: "Accuracy"
  bottom: "fc100"
  bottom: "label"
  top: "accuracy_top1"
  include {
    phase: TEST
  }
}
layer {
  name: "accuracy_top5"
  type: "Accuracy"
  bottom: "fc100"
  bottom: "label"
  top: "accuracy_top5"
  include {
    phase: TEST
  }
  accuracy_param {
    top_k: 5
  }
}
